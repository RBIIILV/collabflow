Here's a restructured implementation integrating MCP tooling requirements with your existing conventions, following clinerules best practices:

# Windsurf Cascade Workspace Rules  
**v3.2 - Documentation Migration & Project Update**  
*Last updated: March 12, 2025*  

```json
/* Recommended .clinerules header configuration */
{
  "mcpIntegration": {
    "requiredServers": [
      "memory", 
      "perplexity-mcp",
      "firecrawl-mcp-server",
      "browser-tools",
      "@21st-dev-magic-mcp"
    ],
    "autoApproveThreshold": "STRICT"
  }
}
```

## Documentation Structure
**Organized Documentation**
- All project documentation now located in `/docs` directory:
  - `ProjectStatus.md` - Current state and roadmap
  - `TechnicalStack.md` - Architecture and implementation details
  - `Frontend.md` - Frontend components and guidelines
  - `Backend.md` - Backend services and database schema
  - `AI.md` - AI integration components
  - `MCP-Servers.md` - MCP server tools usage

**Completed Components**
- Calendar System (COMPLETE)
- Task Management (COMPLETE)
- Core Infrastructure (COMPLETE)

**Priority Components**
- Project Component (Dashboard as hub for all projects)
- Document Management (Dropbox Integration)
- Email Integration (Outlook, Apple Mail, Gmail)

## Core Architecture Requirements
**Supabase Implementation**
- Use web API/CLI with `firecrawl-mcp-server` for:
  - Schema validation (`firecrawl_extract`[1])
  - Real-time data monitoring (`firecrawl_scrape`[1])
  - Automated documentation updates (`firecrawl_crawl`[1])

**Next.js Optimization**
- Enforce through `browser-tools` MCP:
  ```bash
  npx @agentdeskai/browser-tools-mcp@1.2.0 runPerformanceAudit [1]
  ```
  - Lazy loading verification
  - SSR hydration checks
  - Image optimization audits

## MCP Development Protocols
### Documentation Updates
```bash
# Update documentation in memory graph
npx @modelcontextprotocol/server-memory create_entities --name "Documentation Update" --entityType "Update" [1]
```
- Reference `/docs` structure for all documentation needs
- Update memory graph when documentation changes
- Use Mermaid diagrams for visual representation

### Memory Management
```bash
# Graph maintenance command
npx @modelcontextprotocol/server-memory revise_graph --prune-older 7d [1]
```
- Automatic entity cleanup after 72hr inactivity
- Relationship mapping through `create_relations`/`delete_relations`[1]

### Component Standards
- Validate via `perplexity-mcp`:
  ```javascript
  perplexity.check_deprecated_code('component.tsx') [1]
  ```
  - 300 line limit enforced in CI
  - Hook validation before commit

### Form Styling & Dark Mode
- Follow the [Form Styling Guide](./docs/FormStylingGuide.md) for all form inputs
- Use theme-aware classes for all UI elements:
  ```jsx
  // Always use theme variables instead of hardcoded colors
  className="bg-background text-foreground" // ✓
  className="bg-white text-black" // ✗
  ```
- Use the `.form-input` utility class for consistent styling
- Test all components in both light and dark modes
- Run `browser-tools` accessibility audit to verify contrast:
  ```bash
  npx @agentdeskai/browser-tools-mcp@1.2.0 runAccessibilityAudit [1]
  ```

## UI Development Workflow
```bash
# Component generation
npx @21st-dev/magic-mcp --pattern accordion [1]
```
**Required Parameters**
- `/ui` ➔ Radix primitives
- `/21st` ➔ Design system components
- Auto-approve `TWENTY_FIRST_API_KEY` in env[1]

## Deployment & Monitoring
**CI/CD Pipeline Requirements**
```yaml
- step:
    name: MCP Validation Suite
    commands:
      - npx @agentdeskai/browser-tools-mcp runSEOAudit [1]
      - perplexity-mcp check_deprecated_code [1]
      - firecrawl-mcp validate_schemas [1]
```

**Rollback Triggers**
- >5% performance regression
- Failed accessibility audits
- Memory graph inconsistency

---

**Critical MCP Environment Variables**  
```env
PERPLEXITY_API_KEY=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 [1]
FIRECRAWL_API_KEY=fc-ba5c72b30b8f4048adc0962ce26ee4cf [1]
TWENTY_FIRST_API_KEY=5e7499a05f130d4aa67e23b5176cd2104211f3107389660737ea19fbdd12b179 [1]
```
